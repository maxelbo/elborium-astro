---
import TagsLayout from "@/layouts/TagsLayout.astro";
import ProjectList from "@/components/ProjectList.astro";
import { dekebabize } from "@/scripts/tagActions";

export async function getStaticPaths() {
  const allProjects = await Astro.glob("./*.mdx");

  const uniqueTags = [
    ...new Set(allProjects.map((project) => project.frontmatter.tags).flat()),
  ];

  uniqueTags.sort();

  return uniqueTags.map((tag) => {
    const filteredProjects = allProjects.filter((project) =>
      project.frontmatter.tags.includes(tag)
    );
    const pubProjects = filteredProjects.filter(
      (project) => !project.frontmatter.private
    );
    pubProjects.sort((a, b) => {
      return a.frontmatter.order - b.frontmatter.order;
    });
    return {
      params: { tag },
      props: { projects: pubProjects },
    };
  });
}

const { tag } = Astro.params;
const { projects } = Astro.props;

const pageTitle = dekebabize(tag);
const projectListTitle = `${pageTitle} projects`;
---

<TagsLayout {pageTitle} {tag}>
  <ProjectList {projectListTitle} {projects} />
</TagsLayout>
